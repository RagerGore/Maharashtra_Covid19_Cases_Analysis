# -*- coding: utf-8 -*-
"""Covid19Project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SgZTH_bVn5Jr7LzGoNkBu5MW-rcK-1So
"""

#Importing Libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
#Loading Dataset
case_data = pd.read_csv('case_time_series.csv')
district_data = pd.read_csv('district.csv')

#Creating a Line Chart
#Declaring data for axis
Y = case_data.iloc[61:,1].values #Stores Daily Confirmed
R = case_data.iloc[61:,3].values #Stores Daily Recovered
D = case_data.iloc[61:,5].values #Stores Daily Deceased
X = case_data.iloc[61:,0] #Stores Date

#Customising the chart
plt.figure(figsize=(25,8))#Chart Size
plt.title("COVID-19 IN : Daily Confirmed\n",size=50,color='#28a9ff')#Adding a title
ax = plt.axes()#Putting axis in a variable for easy use
ax.grid(linewidth=0.4, color='#8f8f8f')#Customising grid lines
ax.set_facecolor("black")#Changing background colour
#Changing X & Y labels
ax.set_xlabel('\nDate',size=25,color='#4bb4f2')
ax.set_ylabel('Number of Confirmed Cases\n',size=25,color='#4bb4f2')
#Customising axis ticks
plt.xticks(rotation='vertical',size='20',color='white')
plt.yticks(size=20,color='white')
plt.tick_params(size=20,color='white')
#Annottating plotted points
for i,j in zip(X,Y):
    ax.annotate(str(j),xy=(i,j+100),color='white',size='13')
#Visual arrow creation
ax.annotate('Second Lockdown 15th April',xy=(15.2, 860),xytext=(19.9,500),color='white',size='25',arrowprops=dict(color='white',linewidth=0.025))

#Plotting the graph with customised variables
ax.plot(X,Y,color='#1F77B4',marker='o',linewidth=4,markersize=15,markeredgecolor='#035E9B')

#Creating a Bar Plot
#Declaring data for x axis
re=district_data.iloc[:30,5].values#Recovered cases
de=district_data.iloc[:30,4].values#Deceased cases
co=district_data.iloc[:30,3].values#Confirmed cases
x=list(district_data.iloc[:30,0])
#Customising Chart
plt.figure(figsize=(25,10))#Setting size of chart
ax=plt.axes()#Declaring axis as variable for ease of use
ax.set_title('Maharashtra District wise breakdown\n',size=50,color='#28a9ff')#Set title
ax.set_facecolor('black')#Setting background colour
ax.grid(linewidth=0.4, color='#8f8f8f')#Customising grid lines
#Customising axis ticks
plt.xticks(rotation='vertical',size='20',color='white')
plt.yticks(size='20',color='white')
plt.tick_params(size=20,color='white')
#Customising axis labels
ax.set_xlabel('\nDistrict',size=25,color='#4bb4f2')
ax.set_ylabel('No. of cases\n',size=25,color='#4bb4f2')
#Plotting 3 bar charts, one for each data type
plt.bar(x,co,label='re')
plt.bar(x,re,label='re',color='green')
plt.bar(x,de,label='re',color='red')
#Annottating plotted points
for i,j in zip(x,co):
    ax.annotate(str(int(j)),xy=(i,j+3),color='white',size='15')

plt.legend(['Confirmed','Recovered','Deceased'],fontsize=20)#Adding legend

#Creating a Pie Chart
#Declaring data for slices
re=district_data.iloc[:30,5].sum()#Recovered cases
de=district_data.iloc[:30,4].sum()#Deceased cases
co=district_data.iloc[:30,3].sum()#Confirmed cases
#Turning numbers into percentages
tot = re+de+co
re = (re/tot) * 100
de = (de/tot) * 100
co = (co/tot) * 100

slices = [co, re, de]
activities = ['Comfirmed', 'Recovered', 'Deceased']

#Customising the chart
cols=['#4C8BE2','#00e061','#fe073a']#Slice Colours
exp = [0.2,0.02,0.02]#Ammount of spacing between slices

#Plotting pie chart
plt.pie(slices,labels=activities, textprops=dict(size=25,color='black'),radius=3,colors=cols,autopct='%2.2f%%',explode=exp,shadow=True,startangle=90)

plt.title('Cases & Resolutions\n\n\n\n\n',color='#4fb4f2',size=40)#Adding a title